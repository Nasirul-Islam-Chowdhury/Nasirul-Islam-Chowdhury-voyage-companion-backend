"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TripRequestRoutes = void 0;
const express_1 = require("express");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const tripRequest_controller_1 = require("./tripRequest.controller");
const tripRequest_validation_1 = require("./tripRequest.validation");
const client_1 = require("@prisma/client");
const router = (0, express_1.Router)();
router.post("/:tripId", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), tripRequest_controller_1.TripRequestController.createBuddyRequest);
router.get("/travel-buddies/:tripId", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), tripRequest_controller_1.TripRequestController.getBuddyRequest);
router.get("/my-requests", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), tripRequest_controller_1.TripRequestController.getMyRequest);
router.get("/my-posted-trips-requests", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), tripRequest_controller_1.TripRequestController.getMyPostedTripsRequest);
router.delete("/delete/:id", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), tripRequest_controller_1.TripRequestController.deleteTripRequest);
router.patch("/:id/respond", (0, auth_1.default)(client_1.UserRole.USER, client_1.UserRole.ADMIN), (0, validateRequest_1.default)(tripRequest_validation_1.buddyValidation.buddyRequest), tripRequest_controller_1.TripRequestController.updateBuddyRequest);
exports.TripRequestRoutes = router;
